!function(){"use strict";class e{constructor(e,t){this._inputSelector=e.inputSelector,this._formSelector=e.formSelector,this._submitButtonSelector=e.submitButtonSelector,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._inputElements=Array.from(this._form.querySelectorAll(this._inputSelector)),this._submitButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}resetValidation(){this._toggleButtonState(),this._inputElements.forEach((e=>{this._hideInputError(e)}))}_disableButton(){this._submitButton.disabled=!0}_toggleButtonState(){this._hasInvalidInput()?this._disableButton():this._submitButton.disabled=!1}_hasInvalidInput(){return!this._inputElements.every((e=>e.validity.valid))}_setEventListeners(){this._form.addEventListener("submit",(e=>{e.preventDefault(),this._disableButton()})),this._inputElements.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._setEventListeners()}}class t{constructor(e,t,s){this._name=e.name,this._image=e.link,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._cardImage.addEventListener("click",(()=>{this._handleImageClick(this)})),this._likeButton.addEventListener("click",(()=>{this._likeButton.classList.toggle("card__heart-button_clicked")})),this._deleteButton.addEventListener("click",(()=>{this._element.remove()}))}generateCard(){return this._element=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._likeButton=this._element.querySelector(".card__heart-button"),this._cardImage=this._element.querySelector(".card__image"),this._cardTitle=this._element.querySelector(".card__title"),this._deleteButton=this._element.querySelector(".card__delete-button"),this._cardImage.src=this._image,this._cardImage.alt=this._name,this._cardTitle.textContent=this._name,this._setEventListeners(),this._element}}class s{constructor(e){let{modalSelector:t}=e;this._modalElement=document.querySelector(t),this._closeButton=this._modalElement.querySelector(".modal__close"),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._modalElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._modalElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}_closeModalOverlay=e=>{e.target===e.currentTarget&&this.close()};setEventListeners(){this._modalElement.addEventListener("mousedown",(e=>this._closeModalOverlay(e))),this._closeButton.addEventListener("click",(()=>this.close()))}}class o extends s{constructor(e,t){super({modalSelector:e}),this.modalForm=this._modalElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputElements=Array.from(this.modalForm.querySelectorAll(".modal__input"))}_getInputValues(){const e={};return this._inputElements.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this.modalForm.addEventListener("submit",(()=>this._handleFormSubmit(this._getInputValues())))}}document.querySelector(".cards__list");const n=document.forms["edit-profile-form"],r=document.forms["add-card-form"],i=document.querySelector(".profile__edit-button"),l=document.querySelector(".profile__add-button"),a=(document.querySelector(".profile__name"),document.querySelector(".profile__job"),document.querySelector("[name='name'")),m=document.querySelector("[name='job']"),c={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-button",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},d=new e(c,n);d.enableValidation(),new e(c,r).enableValidation();const h=new class{constructor(e,t){let{items:s,renderer:o}=e;this._renderedItems=s,this._renderer=o,this._container=document.querySelector(t)}renderItems(){this._renderedItems.forEach((e=>{this._renderer(e)}))}appendItem(e){this._container.append(e)}prependItem(e){this._container.prepend(e)}}({items:[{name:"Joshua Tree",link:"https://images.unsplash.com/photo-1596625820723-f0f481ff80be?w=700&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8M3x8am9zaHVhJTIwdHJlZXxlbnwwfHwwfHx8MA%3D%3D"},{name:"Emigrant Wilderness",link:"https://images.unsplash.com/photo-1446575983799-470c50cfdd25?w=700&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTF8fGVtaWdyYW50JTIwd2lsZGVybmVzc3xlbnwwfHwwfHx8MA%3D%3D"},{name:"Redwood National Forest",link:"https://images.unsplash.com/photo-1698410531000-bdbb42dc388e?w=700&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTF8fHJlZHdvb2QlMjBuYXRpb25hbCUyMGZvcmVzdHxlbnwwfHwwfHx8MA%3D%3D"},{name:"Marin Headlands",link:"https://images.unsplash.com/photo-1536687485033-90afd5b75fb8?w=700&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTV8fG1hcmluJTIwaGVhZGxhbmRzfGVufDB8fDB8fHww"},{name:"Trinity Alps",link:"https://images.unsplash.com/photo-1648847672613-ca4f0351acae?w=700&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTF8fHRyaW5pdHklMjBhbHBzfGVufDB8fDB8fHww"},{name:"Goat Rock Beach",link:"https://images.unsplash.com/photo-1578422212025-0e64506a0be9?w=700&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8M3x8Z29hdCUyMHJvY2slMjBiZWFjaHxlbnwwfHwwfHx8MA%3D%3D"}],renderer:e=>{h.appendItem(b(e))}},".cards__list");h.renderItems();const u=new o("#edit-modal",(function(e){console.log(e.name),f.setUserInfo({nameInput:e.name,jobInput:e.job}),u.close()}));u.setEventListeners();const _=new o("#add-card-modal",(function(e){const t={name:e.title,link:e.url};h.prependItem(b(t)),_.close(),_.modalForm.reset()}));_.setEventListeners();const p=new class extends s{constructor(e){super({modalSelector:e}),this._modalImage=this._modalElement.querySelector(".modal__image-preview"),this._modalImageSubtitle=this._modalElement.querySelector(".modal__picture-subtitle")}open(e){this._modalImage.src=e.link,this._modalImage.alt=`Photo of ${e.name}`,this._modalImageSubtitle.textContent=e.name,super.open()}}("#preview-image-modal");p.setEventListeners();const f=new class{constructor(e){let{nameElementSelector:t,jobElementSelector:s}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(s)}getUserInfo(){return this._userInfo={name:this._nameElement.textContent,job:this._jobElement.textContent},this._userInfo}setUserInfo(e){let{nameInput:t,jobInput:s}=e;this._nameElement.textContent=t,this._jobElement.textContent=s}}({nameElementSelector:".profile__name",jobElementSelector:".profile__job"});function b(e){return new t(e,"#card-template",(()=>{p.open(e)})).generateCard()}i.addEventListener("click",(()=>{const e=f.getUserInfo();a.value=e.name,m.value=e.job,u.open(),d.resetValidation()})),l.addEventListener("click",(()=>{_.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,